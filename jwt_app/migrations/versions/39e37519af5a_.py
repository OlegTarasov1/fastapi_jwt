"""empty message

Revision ID: 39e37519af5a
Revises: 017221c73f0b
Create Date: 2025-01-18 02:56:34.490128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '39e37519af5a'
down_revision: Union[str, None] = '017221c73f0b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reader_twos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default='FALSE', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.drop_table('borrowed_books')
    op.drop_table('readers')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('readers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('readers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='readers_pkey'),
    sa.UniqueConstraint('username', name='readers_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('borrowed_books',
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reader_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('time_borrowed', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('expected_to_return', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='borrowed_books_book_id_fkey'),
    sa.ForeignKeyConstraint(['reader_id'], ['readers.id'], name='borrowed_books_reader_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'reader_id', name='borrowed_books_pkey')
    )
    op.drop_table('reader_twos')
    # ### end Alembic commands ###
